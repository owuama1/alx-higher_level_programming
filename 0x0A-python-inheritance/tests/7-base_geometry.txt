    # 7-base_geometry.txt
    ====================
    Usage 7-base_geometry.py
	--------------------
	def area(self): that raises an Exception with the message area() is not implemented
	def integer_validator(self, name, value): that validates value
	===================
    # Test no args
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry(None)
	Traceback (most recent call last):
	...
	TypeError: BaseGeometry() takes no arguments

	BaseGeommetry has 2 methods. ``area(self)`` and ``integer_validator(self, name, value)``
	=========
	area(self)
	=========
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

	====================================
	integer_validator(self, name, value)
	=================================
	#  Test invalid number
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("Kc", "Lala")
	Traceback (most recent call last):
	...
	TypeError: Kc must be an integer

	# Test < 0
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("Kc", -1)
	Traceback (most recent call last):
	...
	ValueError: Kc must be greater than 0

	# Test 1 args
	>>> bg.integer_validator(None) # doctest: +NORMALIZE_WHITESPACE
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument:
	'value'

	# test Normal
	>>> bg.integer_validator("valid number", 1)

	# Test No args
	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
